name: release

on:
  push:
    tags:
      - '*.*.*'
      - '*.*.*-*'

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # 4.0.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Create JS files
        working-directory: ./ui
        run: |
          yarn install
          yarn build
      - name: Build package using Poetry and store result
        uses: chaoss/grimoirelab-github-actions/build@main
        with:
          artifact-name: sortinghat-dist
          artifact-path: dist
          skip-checkout: yes

  tests:
    needs: [build]
    runs-on: ubuntu-latest

    name: Python ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Download distribution artifact
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          name: sortinghat-dist
          path: dist

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pipx install poetry

      - name: Install dev dependencies
        run: |
          poetry install --only dev --no-root

      - name: Test package backend
        run: |
          PACKAGE=`(cd dist && ls *whl)` && echo $PACKAGE
          poetry run pip install --pre ./dist/$PACKAGE
          poetry run python manage.py test --settings=config.settings.config_testing
          poetry run python manage.py test --settings=config.settings.config_testing_tenant

  release:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Create a new release on the repository
        uses: chaoss/grimoirelab-github-actions/release@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - name: Publish the package on PyPI
        uses: chaoss/grimoirelab-github-actions/publish@main
        with:
          artifact-name: sortinghat-dist
          artifact-path: dist
          pypi-api-token: ${{ secrets.PYPI_API_TOKEN }}
