name: tests

on:
  push:
    branches:
      - '**'
    tags:
      - '!**'
  pull_request:
    branches:
      - '**'

jobs:

  backend:
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']

    runs-on: ubuntu-latest
    name: Python ${{ matrix.python-version }}
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: |
        pipx install poetry
    - name: Install dependencies
      run: |
        poetry install -vvv
        poetry run pip install -r requirements_dev.txt
    - name: Lint with flake8
      run: |
        poetry run flake8
    - name: Tests
      run: |
        poetry run python manage.py test --settings=config.settings.config_testing
        poetry run python manage.py test --settings=config.settings.config_testing_tenant

  frontend:

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    runs-on: ubuntu-latest
    name: Node ${{ matrix.node-version }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # 4.0.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: ./ui
        run: yarn install
      - name: Run ESLint
        working-directory: ./ui
        run: yarn lint
      - name: Run unit tests
        working-directory: ./ui
        run: yarn test:unit

  integration:

    services:
      mysql:
        image: mariadb:11.8
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        node-version: [18.x, 20.x]
        python-version: ['3.10', '3.11', '3.12', '3.13']

    runs-on: ubuntu-latest
    name: Node ${{ matrix.node-version }} Python ${{ matrix.python-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: |
          pipx install poetry
      - name: Install dependencies
        run: |
          poetry install -vvv
          poetry run pip install -r requirements_dev.txt
      - name: Set MySQL mode
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          mysql --host $DB_HOST --port $DB_PORT -uroot -proot -e "SET GLOBAL sql_mode = 'NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'";
      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # 4.0.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build UI packages
        working-directory: ./ui
        run: |
          yarn install
          yarn build --mode development
      - name: Setup database, static files and run service
        env:
          SORTINGHAT_SECRET_KEY: my-secret-key
          SORTINGHAT_DB_PASSWORD: root
          SORTINGHAT_SUPERUSER_USERNAME: root
          SORTINGHAT_SUPERUSER_PASSWORD: root
        run: |
          poetry run sortinghat-admin --config sortinghat.config.settings setup
      - name: Start server in the background
        run: poetry run sortinghatd --config sortinghat.config.settings --dev &
        env:
          SORTINGHAT_SECRET_KEY: my-secret-key
          SORTINGHAT_DB_PASSWORD: root
          UWSGI_HTTP: "http://localhost:8000"
      - name: Run integration tests
        uses: cypress-io/github-action@1b70233146622b69e789ccdd4f9452adc638d25a # 6.6.1
        with:
          install: false
          command: yarn test:e2e --config baseUrl=http://localhost:8000
          wait-on: 'http://localhost:8000/api/'
          spec: tests/e2e/specs/*.js
          working-directory: ./ui
        env:
          CYPRESS_USERNAME: root
          CYPRESS_PASSWORD: root
          CYPRESS_API_URL: http://localhost:8000/api/
